{"ast":null,"code":"/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React, { Component, createRef, PureComponent } from 'react';\nimport { createPortal, flushSync } from 'react-dom';\nimport { Calendar } from '@fullcalendar/core';\nimport { CustomRenderingStore } from '@fullcalendar/core/internal';\nexport default class FullCalendar extends Component {\n  constructor() {\n    super(...arguments);\n    this.elRef = createRef();\n    this.isUnmounting = false;\n    this.state = {\n      customRenderingMap: new Map()\n    };\n    this.requestResize = () => {\n      if (!this.isUnmounting) {\n        this.cancelResize();\n        this.resizeId = requestAnimationFrame(() => {\n          this.doResize();\n        });\n      }\n    };\n  }\n  render() {\n    const customRenderingNodes = [];\n    for (const customRendering of this.state.customRenderingMap.values()) {\n      customRenderingNodes.push(React.createElement(CustomRenderingComponent, {\n        key: customRendering.id,\n        customRendering: customRendering\n      }));\n    }\n    return React.createElement(\"div\", {\n      ref: this.elRef\n    }, customRenderingNodes);\n  }\n  componentDidMount() {\n    const customRenderingStore = new CustomRenderingStore();\n    this.handleCustomRendering = customRenderingStore.handle.bind(customRenderingStore);\n    this.calendar = new Calendar(this.elRef.current, Object.assign(Object.assign({}, this.props), {\n      handleCustomRendering: this.handleCustomRendering\n    }));\n    this.calendar.render();\n    let lastRequestTimestamp;\n    customRenderingStore.subscribe(customRenderingMap => {\n      const requestTimestamp = Date.now();\n      const isMounting = !lastRequestTimestamp;\n      const runFunc = this.isUnmounting || isMounting || requestTimestamp - lastRequestTimestamp < 100 // rerendering frequently\n      ? runNow // either sync rendering (first-time or React 17) or async (React 18)\n      : flushSync; // guaranteed sync rendering\n      runFunc(() => {\n        this.setState({\n          customRenderingMap\n        }, () => {\n          lastRequestTimestamp = requestTimestamp;\n          if (isMounting) {\n            this.doResize();\n          } else {\n            this.requestResize();\n          }\n        });\n      });\n    });\n  }\n  componentDidUpdate() {\n    this.calendar.resetOptions(Object.assign(Object.assign({}, this.props), {\n      handleCustomRendering: this.handleCustomRendering\n    }));\n  }\n  componentWillUnmount() {\n    this.isUnmounting = true;\n    this.cancelResize();\n    this.calendar.destroy();\n  }\n  doResize() {\n    this.calendar.updateSize();\n  }\n  cancelResize() {\n    if (this.resizeId !== undefined) {\n      cancelAnimationFrame(this.resizeId);\n      this.resizeId = undefined;\n    }\n  }\n  getApi() {\n    return this.calendar;\n  }\n}\nFullCalendar.act = runNow; // DEPRECATED. Not leveraged anymore\nclass CustomRenderingComponent extends PureComponent {\n  render() {\n    const {\n      customRendering\n    } = this.props;\n    const {\n      generatorMeta\n    } = customRendering;\n    const vnode = typeof generatorMeta === 'function' ? generatorMeta(customRendering.renderProps) : generatorMeta;\n    return createPortal(vnode, customRendering.containerEl);\n  }\n}\n// Util\n// -------------------------------------------------------------------------------------------------\nfunction runNow(f) {\n  f();\n}","map":{"version":3,"names":["React","Component","createRef","PureComponent","createPortal","flushSync","Calendar","CustomRenderingStore","FullCalendar","constructor","elRef","isUnmounting","state","customRenderingMap","Map","requestResize","cancelResize","resizeId","requestAnimationFrame","doResize","render","customRenderingNodes","customRendering","values","push","createElement","CustomRenderingComponent","key","id","ref","componentDidMount","customRenderingStore","handleCustomRendering","handle","bind","calendar","current","Object","assign","props","lastRequestTimestamp","subscribe","requestTimestamp","Date","now","isMounting","runFunc","runNow","setState","componentDidUpdate","resetOptions","componentWillUnmount","destroy","updateSize","undefined","cancelAnimationFrame","getApi","act","generatorMeta","vnode","renderProps","containerEl","f"],"sources":["C:\\Users\\Captain\\Desktop\\WalkieDoggyProject\\Frontend\\node_modules\\@fullcalendar\\react\\src\\index.tsx"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React, { Component, createRef, PureComponent } from 'react'\nimport { createPortal, flushSync } from 'react-dom'\nimport {\n  CalendarOptions,\n  CalendarApi,\n  Calendar,\n} from '@fullcalendar/core'\nimport {\n  CustomRendering,\n  CustomRenderingStore,\n} from '@fullcalendar/core/internal'\n\ninterface CalendarState {\n  customRenderingMap: Map<string, CustomRendering<any>>\n}\n\nexport default class FullCalendar extends Component<CalendarOptions, CalendarState> {\n  static act = runNow // DEPRECATED. Not leveraged anymore\n\n  private elRef = createRef<HTMLDivElement>()\n  private calendar: Calendar\n  private handleCustomRendering: (customRendering: CustomRendering<any>) => void\n  private resizeId: number | undefined\n  private isUnmounting = false\n\n  state: CalendarState = {\n    customRenderingMap: new Map<string, CustomRendering<any>>()\n  }\n\n  render() {\n    const customRenderingNodes: JSX.Element[] = []\n\n    for (const customRendering of this.state.customRenderingMap.values()) {\n      customRenderingNodes.push(\n        <CustomRenderingComponent\n          key={customRendering.id}\n          customRendering={customRendering}\n        />\n      )\n    }\n\n    return (\n      <div ref={this.elRef}>\n        {customRenderingNodes}\n      </div>\n    )\n  }\n\n  componentDidMount() {\n    const customRenderingStore = new CustomRenderingStore<unknown>()\n    this.handleCustomRendering = customRenderingStore.handle.bind(customRenderingStore)\n\n    this.calendar = new Calendar(this.elRef.current, {\n      ...this.props,\n      handleCustomRendering: this.handleCustomRendering,\n    })\n    this.calendar.render()\n\n    let lastRequestTimestamp: number | undefined\n\n    customRenderingStore.subscribe((customRenderingMap) => {\n      const requestTimestamp = Date.now()\n      const isMounting = !lastRequestTimestamp\n      const runFunc = (\n        this.isUnmounting ||\n        isMounting ||\n        (requestTimestamp - lastRequestTimestamp) < 100 // rerendering frequently\n      ) ? runNow // either sync rendering (first-time or React 17) or async (React 18)\n        : flushSync // guaranteed sync rendering\n\n      runFunc(() => {\n        this.setState({ customRenderingMap }, () => {\n          lastRequestTimestamp = requestTimestamp\n          if (isMounting) {\n            this.doResize()\n          } else {\n            this.requestResize()\n          }\n        })\n      })\n    })\n  }\n\n  componentDidUpdate() {\n    this.calendar.resetOptions({\n      ...this.props,\n      handleCustomRendering: this.handleCustomRendering,\n    })\n  }\n\n  componentWillUnmount() {\n    this.isUnmounting = true\n    this.cancelResize()\n    this.calendar.destroy()\n  }\n\n  requestResize = () => {\n    if (!this.isUnmounting) {\n      this.cancelResize()\n      this.resizeId = requestAnimationFrame(() => {\n        this.doResize()\n      })\n    }\n  }\n\n  doResize() {\n    this.calendar.updateSize()\n  }\n\n  cancelResize() {\n    if (this.resizeId !== undefined) {\n      cancelAnimationFrame(this.resizeId)\n      this.resizeId = undefined\n    }\n  }\n\n  getApi(): CalendarApi {\n    return this.calendar\n  }\n}\n\n// Custom Rendering\n// -------------------------------------------------------------------------------------------------\n\ninterface CustomRenderingComponentProps {\n  customRendering: CustomRendering<any>\n}\n\nclass CustomRenderingComponent extends PureComponent<CustomRenderingComponentProps> {\n  render() {\n    const { customRendering } = this.props\n    const { generatorMeta } = customRendering\n    const vnode = typeof generatorMeta === 'function' ?\n      generatorMeta(customRendering.renderProps) :\n      generatorMeta\n\n    return createPortal(vnode, customRendering.containerEl)\n  }\n}\n\n// Util\n// -------------------------------------------------------------------------------------------------\n\nfunction runNow(f: () => void): void {\n  f()\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}